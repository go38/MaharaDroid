<?eclipse.ant.import?>
<!-- custom targets
To customise:

- Create a set of custom image files in a parallel directory structure to ./res
and change 'res_sol' below to the directory name. Change filenames to be copied below as required.

- Check changes in text below, and add your own.

- In Eclipse do File->Export, Ant buildfiles, select project name, Finish. 
This will create a build.xml file which will do an include on this one (because of the PI on the top line above)

- Do ant custom to run the customisations. This copies existing (vanilla) files to 'std' directory
  then copies the custom files into the res directory

- To build apk - in Eclipse do Project->Clean, then Run->Run As->Android application (this builds Release version of apk)

ref: http://ant.apache.org/manual/
-->
<project>

  <property name="CUST_DIR" value="./res_sol"/>
  <property name="RES_DIR" value="./res"/>

  <target depends="init,copyicons,editstrings,editwindowtitle"  description="All customisation" name="custom" >
    <echo message="Doing custom tasks"/>
  </target>


  <target depends="init"  description="copy icons" name="copyicons">

    <echo message="copying icons"/>

    <mkdir dir="${RES_DIR}/drawable/std"/>

    <copy file="${RES_DIR}/drawable/icon.png" todir="${RES_DIR}/drawable/std/" 
          overwrite="true" failonerror="false" verbose="true"/>
    <copy file="${CUST_DIR}/drawable/icon.png" todir="${RES_DIR}/drawable/"
          overwrite="true" failonerror="false" verbose="true"/>

    <copy file="${RES_DIR}/drawable/button.9.png" todir="${RES_DIR}/drawable/" 
          overwrite="true" failonerror="false" verbose="true"/>
    <copy file="${CUST_DIR}/drawable/button.9.png" todir="${RES_DIR}/drawable/"
          overwrite="true" failonerror="false" verbose="true"/>

    <copy file="${RES_DIR}/drawable/button_pressed.9.png" todir="${RES_DIR}/drawable/std/" 
          overwrite="true" failonerror="false" verbose="true"/>
    <copy file="${CUST_DIR}/drawable/button_pressed.9.png" todir="${RES_DIR}/drawable/"
          overwrite="true" failonerror="false" verbose="true"/>

    <copy file="${RES_DIR}/drawable/windowtitle_background.png" todir="${RES_DIR}/drawable/std/" 
          overwrite="true" failonerror="false" verbose="true"/>
    <copy file="${CUST_DIR}/drawable/windowtitle_background.png" todir="${RES_DIR}/drawable/"
          overwrite="true" failonerror="false" verbose="true"/>


    <property name="SCRSZ" value="-hdpi"/>

    <mkdir dir="${RES_DIR}/drawable${SCRSZ}/std"/>

    <copy file="${RES_DIR}/drawable${SCRSZ}/icon.png" todir="${RES_DIR}/drawable${SCRSZ}/std/" 
          overwrite="true" failonerror="false" verbose="true"/>
    <copy file="${CUST_DIR}/drawable${SCRSZ}/icon.png" todir="${RES_DIR}/drawable${SCRSZ}/"
          overwrite="true" failonerror="true" verbose="true"/>

    <property name="SCRSZxh" value="-xhdpi"/>
    <mkdir dir="${RES_DIR}/drawable${SCRSZxh}/std"/>

    <copy file="${RES_DIR}/drawable${SCRSZxh}/icon.png" todir="${RES_DIR}/drawable${SCRSZxh}/std/" 
          overwrite="true" failonerror="false" verbose="true"/>
    <copy file="${CUST_DIR}/drawable${SCRSZxh}/icon.png" todir="${RES_DIR}/drawable${SCRSZxh}/"
          overwrite="true" failonerror="true" verbose="true"/>

    <property name="SCRSZl" value="-ldpi"/>
    <mkdir dir="${RES_DIR}/drawable${SCRSZl}/std"/>

    <copy file="${RES_DIR}/drawable${SCRSZl}/icon.png" todir="${RES_DIR}/drawable${SCRSZl}/std/" 
          overwrite="true" failonerror="false" verbose="true"/>
    <copy file="${CUST_DIR}/drawable${SCRSZl}/icon.png" todir="${RES_DIR}/drawable${SCRSZl}/"
          overwrite="true" failonerror="true" verbose="true"/>

    <property name="SCRSZm" value="-mdpi"/>
    <mkdir dir="${RES_DIR}/drawable${SCRSZm}/std"/>

    <copy file="${RES_DIR}/drawable${SCRSZm}/icon.png" todir="${RES_DIR}/drawable${SCRSZm}/std/" 
          overwrite="true" failonerror="false" verbose="true"/>
    <copy file="${CUST_DIR}/drawable${SCRSZm}/icon.png" todir="${RES_DIR}/drawable${SCRSZm}/"
          overwrite="true" failonerror="true" verbose="true"/>

  </target>


  <target depends="init"  description="edit custom strings" name="editstrings">
    <!-- this makes a copy of the original file in the std dir
        If run a second time - it will not overwrite the saved file, and will not make changes
        to the main one as the token will not now match - hopefully what we want!
        Note: if a different language than default is used  - then the lang specific files will need to 
        be manually changed -->
    <echo message="editing custom strings"/>
    <mkdir dir="${RES_DIR}/values/std"/>

    <!-- <upload.base.uri>http://solent-mahara.catalystdemo.co.uk</upload.base.uri>   -->
    <copy file="${RES_DIR}/values/strings.xml"  todir="${RES_DIR}/values/std/" 
          overwrite="false" failonerror="false" verbose="true"/>
    <replace file="${RES_DIR}/values/strings.xml" 
          token="&lt;string name=&quot;pref_base_url_default&quot;&gt;&lt;/string&gt;" 
          value="&lt;string name=&quot;pref_base_url_default&quot;&gt;http://solent-mahara.catalystdemo.co.uk&lt;/string&gt;" 
          summary="true"/>
          
      <!-- string name="app_name">MaharaDroid</string-->
      <replace file="${RES_DIR}/values/strings.xml" 
          token="&lt;string name=&quot;app_name&quot;&gt;MaharaDroid&lt;/string&gt;" 
          value="&lt;string name=&quot;app_name&quot;&gt;myPortfolio&lt;/string&gt;" 
          summary="true"/>
  </target>


  <target depends="init"  description="edit windowtitle" name="editwindowtitle">
    <!-- this makes a copy of the original file in the std dir
         Notes as for editstrings - though this cannot reliably detect if content is already there
     -->
    <echo message="adding custom windowtitle element"/>
    <mkdir dir="${RES_DIR}/values/std"/>

    <copy file="${RES_DIR}/layout/windowtitle.xml"  todir="${RES_DIR}/layout/std/" 
          overwrite="false" failonerror="false" verbose="true"/>
    <replace file="${RES_DIR}/layout/windowtitle.xml" 
          token="&lt;/LinearLayout&gt;"
          value="       &lt;!--  custom icon on right of header --&gt;&#xa;
     &lt;ImageView&#xa;
        android:id=&quot;@+id/windowtitle_cust_icon&quot;&#xa;
        android:src=&quot;@drawable/windowtitle_cust_icon&quot;&#xa;
        android:layout_width=&quot;wrap_content&quot;&#xa;
        android:layout_height=&quot;wrap_content&quot;&#xa;
        android:layout_gravity=&quot;right&quot;&#xa;
        android:layout_weight=&quot;0&quot;&#xa;
        android:padding=&quot;0dp&quot;&#xa;
        android:layout_margin=&quot;0dp&quot;&#xa;
        android:scaleType=&quot;fitStart&quot;&#xa;
        /&gt;&#xa;
&lt;/LinearLayout&gt;&#xa;"
          summary="true"/>
  </target>


  <target depends="init"  description="copy std icons back" name="copystdiconsback">
    <!-- this copyies all original files in the 'std' dir back to main res dir
         XXXNotes as for editstrings - though this cannot reliably detect if content is already there
     -->
    <echo message="copying std files back"/>
    <echo message="copying icons"/>

    <copy todir="${RES_DIR}/drawable" overwrite="true" failonerror="false" verbose="true">
        <fileset dir="${RES_DIR}/drawable/std" />
    </copy>

    <copy todir="${RES_DIR}/drawable-hdpi" overwrite="true" failonerror="false" verbose="true">
        <fileset dir="${RES_DIR}/drawable-hdpi/std" />
    </copy>

    <copy todir="${RES_DIR}/drawable-ldpi" overwrite="true" failonerror="false" verbose="true">
        <fileset dir="${RES_DIR}/drawable-ldpi/std" />
    </copy>

    <copy todir="${RES_DIR}/drawable-mdpi" overwrite="true" failonerror="false" verbose="true">
        <fileset dir="${RES_DIR}/drawable-mdpi/std" />
    </copy>

    <copy todir="${RES_DIR}/drawable-xhdpi" overwrite="true" failonerror="false" verbose="true">
        <fileset dir="${RES_DIR}/drawable-xhdpi/std" />
    </copy>


    <echo message="copying string file()s)"/>

    <copy todir="${RES_DIR}/values" overwrite="true" failonerror="false" verbose="true">
        <fileset dir="${RES_DIR}/values/std" />
    </copy>

    <echo message="copying layout file(s)"/>

    <copy todir="${RES_DIR}/layout" overwrite="true" failonerror="false" verbose="true">
        <fileset dir="${RES_DIR}/layout/std" />
    </copy>

  </target>


  <!-- see above for build information -->
  <target depends="init"  description="copy apk" name="copyapk">
    <echo message="copying apk"/>
    <echo message="now copy ./bin/ArtefactExpandableListAdapterActivity.apk to server"/>
  </target>

  <target description="generate qr code from config.xml" name="genqr">
    <!-- qrencode -o config.png < config.xml -->
    <exec executable="qrencode" input="config.xml">
      <arg value="-o"/>
      <arg value="config.png"/>
    </exec>
  </target>

  <target description="run draw9patch" name="draw9patch">
    <exec executable="draw9patch" >
    </exec>
  </target>


</project>
